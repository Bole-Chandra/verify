# Generated by Django 5.2.3 on 2025-06-22 07:29

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the certificate', unique=True)),
                ('full_name', models.CharField(help_text='Full name of the student', max_length=200)),
                ('course', models.CharField(help_text='Course name', max_length=200)),
                ('college_name', models.CharField(help_text='Name of the college/institution', max_length=300)),
                ('roll_number', models.CharField(help_text='Student roll number', max_length=50)),
                ('email', models.EmailField(help_text='Student email address', max_length=254)),
                ('certificate_image', models.ImageField(blank=True, help_text='Generated certificate image', null=True, upload_to='certificates/')),
                ('certificate_pdf', models.FileField(blank=True, help_text='Generated certificate PDF (optional)', null=True, upload_to='certificates/pdf/')),
                ('qr_code_image', models.ImageField(blank=True, help_text='QR code image for verification', null=True, upload_to='qr_codes/')),
                ('verification_url', models.URLField(blank=True, help_text='URL for certificate verification')),
                ('is_verified', models.BooleanField(default=True, help_text='Whether the certificate is verified')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Certificate creation timestamp')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('email_sent', models.BooleanField(default=False, help_text='Whether email has been sent')),
                ('email_sent_at', models.DateTimeField(blank=True, help_text='Email sent timestamp', null=True)),
                ('drive_uploaded', models.BooleanField(default=False, help_text='Whether uploaded to Google Drive')),
                ('drive_file_id', models.CharField(blank=True, help_text='Google Drive file ID', max_length=100)),
                ('drive_uploaded_at', models.DateTimeField(blank=True, help_text='Drive upload timestamp', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes or comments')),
            ],
            options={
                'verbose_name': 'Certificate',
                'verbose_name_plural': 'Certificates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CertificateTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=100)),
                ('template_image', models.ImageField(help_text='Template image file', upload_to='templates/')),
                ('name_x', models.IntegerField(default=400, help_text='X coordinate for name')),
                ('name_y', models.IntegerField(default=300, help_text='Y coordinate for name')),
                ('course_x', models.IntegerField(default=400, help_text='X coordinate for course')),
                ('course_y', models.IntegerField(default=350, help_text='Y coordinate for course')),
                ('college_x', models.IntegerField(default=400, help_text='X coordinate for college')),
                ('college_y', models.IntegerField(default=400, help_text='Y coordinate for college')),
                ('roll_x', models.IntegerField(default=200, help_text='X coordinate for roll number')),
                ('roll_y', models.IntegerField(default=500, help_text='Y coordinate for roll number')),
                ('cert_id_x', models.IntegerField(default=100, help_text='X coordinate for certificate ID')),
                ('cert_id_y', models.IntegerField(default=515, help_text='Y coordinate for certificate ID')),
                ('date_x', models.IntegerField(default=100, help_text='X coordinate for date')),
                ('date_y', models.IntegerField(default=541, help_text='Y coordinate for date')),
                ('qr_x', models.IntegerField(default=360, help_text='X coordinate for QR code')),
                ('qr_y', models.IntegerField(default=465, help_text='Y coordinate for QR code')),
                ('font_size', models.IntegerField(default=24, help_text='Font size for text')),
                ('font_color', models.CharField(default='#000000', help_text='Font color in hex format', max_length=7)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this template is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Certificate Template',
                'verbose_name_plural': 'Certificate Templates',
                'ordering': ['-created_at'],
            },
        ),
    ]
